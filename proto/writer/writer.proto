syntax = "proto3";

package writer;

import "github.com/methrilion/gourmet/proto/model/model.proto";
import "google/api/annotations.proto";

service StorageWriterService {
    rpc ListCurrency (ListCurrencyRequest) returns (ListCurrencyResponse) {
        option (google.api.http) = {
            get: "/currency"
        };
    }
    rpc CreateCurrency (CreateCurrencyRequest) returns (model.Currency) {
        option (google.api.http) = {
            post: "/currency"
            body: "payload"
        };
    }

    rpc ListRatesOfExchange (ListRatesOfExchangeRequest) returns (ListRatesOfExchangeResponse) {
        option (google.api.http) = {
            get: "/rates_of_exchange"
        };
    }
    rpc CreateRateOfExchange (CreateRateOfExchangeRequest) returns (model.RateOfExchange) {
        option (google.api.http) = {
            post: "/rates_of_exchange"
            body: "payload"
        };
    }

    rpc ListLocations (ListLocationsRequest) returns (ListLocationsResponse) {
        option (google.api.http) = {
            get: "/locations"
        };
    }
    rpc CreateLocation (CreateLocationRequest) returns (model.Location) {
        option (google.api.http) = {
            post: "/locations"
            body: "payload"
        };
    }

    rpc ListProducts (ListProductsRequest) returns (ListProductsResponse) {
        option (google.api.http) = {
            get: "/products"
        };
    }
    rpc CreateProduct (CreateProductRequest) returns (model.Product) {
        option (google.api.http) = {
            post: "/products"
            body: "payload"
        };
    }

    rpc ListPrices (ListPricesRequest) returns (ListPricesResponse) {
        option (google.api.http) = {
            get: "/prices"
        };
    }
    rpc CreatePrice (CreatePriceRequest) returns (model.Price) {
        option (google.api.http) = {
            post: "/prices"
            body: "payload"
        };
    }

    rpc ListPositions (ListPositionsRequest) returns (ListPositionsResponse) {
        option (google.api.http) = {
            get: "/positions"
        };
    }
    rpc CreatePosition (CreatePositionRequest) returns (model.Position) {
        option (google.api.http) = {
            post: "/positions"
            body: "payload"
        };
    }

    rpc ListEmployees (ListEmployeesRequest) returns (ListEmployeesResponse) {
        option (google.api.http) = {
            get: "/employees"
        };
    }
    rpc CreateEmployee (CreateEmployeeRequest) returns (model.Employee) {
        option (google.api.http) = {
            post: "/employees"
            body: "payload"
        };
    }

    rpc ListMethods (ListMethodsRequest) returns (ListMethodsResponse) {
        option (google.api.http) = {
            get: "/methods"
        };
    }
    rpc CreateMethod (CreateMethodRequest) returns (model.Method) {
        option (google.api.http) = {
            post: "/methods"
            body: "payload"
        };
    }

    rpc ListReceipts (ListReceiptsRequest) returns (ListReceiptsResponse) {
        option (google.api.http) = {
            get: "/receipts"
        };
    }
    rpc CreateReceipt (CreateReceiptRequest) returns (model.Receipt) {
        option (google.api.http) = {
            post: "/receipts"
            body: "payload"
        };
    }

    rpc ListPurchases (ListPurchasesRequest) returns (ListPurchasesResponse) {
        option (google.api.http) = {
            get: "/purchases"
        };
    }
    rpc CreatePurchase (CreatePurchaseRequest) returns (model.Purchase) {
        option (google.api.http) = {
            post: "/purchases"
            body: "payload"
        };
    }
}

message ListCurrencyRequest {}

message ListCurrencyResponse {
    repeated model.Currency currency = 1;
}

message CreateCurrencyRequest {
    model.Currency payload = 1;
}


message ListRatesOfExchangeRequest {}

message ListRatesOfExchangeResponse {
    repeated model.RateOfExchange rates_of_exchange = 1;
}

message CreateRateOfExchangeRequest {
    model.RateOfExchange payload = 1;
}


message ListLocationsRequest {}

message ListLocationsResponse {
    repeated model.Location locations = 1;
}

message CreateLocationRequest {
    model.Location payload = 1;
}


message ListProductsRequest {}

message ListProductsResponse {
    repeated model.Product products = 1;
}

message CreateProductRequest {
    model.Product payload = 1;
}


message ListPricesRequest {}

message ListPricesResponse {
    repeated model.Price prices = 1;
}

message CreatePriceRequest {
    model.Price payload = 1;
}


message ListPositionsRequest {}

message ListPositionsResponse {
    repeated model.Position positions = 1;
}

message CreatePositionRequest {
    model.Position payload = 1;
}


message ListEmployeesRequest {}

message ListEmployeesResponse {
    repeated model.Employee employees = 1;
}

message CreateEmployeeRequest {
    model.Employee payload = 1;
}


message ListMethodsRequest {}

message ListMethodsResponse {
    repeated model.Method methods = 1;
}

message CreateMethodRequest {
    model.Method payload = 1;
}


message ListReceiptsRequest{}

message ListReceiptsResponse {
    repeated model.Receipt receipts = 1;
}

message CreateReceiptRequest {
    model.Receipt payload = 1;
}


message ListPurchasesRequest {}

message ListPurchasesResponse {
    repeated model.Purchase purchases = 1;
}

message CreatePurchaseRequest {
    model.Purchase payload = 1;
}